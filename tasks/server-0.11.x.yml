---

##-------------------
##  v0.11.x
##-------------------

- name: Set init script handlers for playbook
  set_fact:
    kong_reload: "Reload kong with init script"
    kong_restart: "Restart kong with init script"
  when: kong_manage_init_script

- name: Set native kong service handlers for playbook
  set_fact:
    kong_reload: "Reload kong"
    kong_restart: "Restart kong"
  when: not kong_manage_init_script

- name: Create kong config file | v0.11.x
  template:
    src:  "0.11.x-kong.conf.j2"
    dest: "{{ kong_conf_dir }}/kong.conf"
    owner: root
    group: root
    mode:  0644
  notify:
    - Validate kong config
    - "{{ kong_restart }}"

# "Reload kong" handler sometimes fails for instance when access_log config
# This is an edge case when custom log format is configured and name of log format
# appended to proxy_access_log property value ("logs/access.log"). Unfortunately,
# "kong reload" command does not recompile nginx-kong.conf as expected before
# reloading nginx. So the outdated nginx-kong.conf fails nginx config validation
# and nginx errors out.
# So it is safer to Restart
- name: Create kong custom nginx config file | v0.11.x or later
  template:
    src:  custom-nginx.template.j2
    dest: "{{ kong_conf_dir }}/custom-nginx.template"
    owner: root
    group: root
    mode:  0644
  notify:
    - Validate kong config
    - "{{ kong_restart }}"

- name: Prepare kong prefix directory | v0.11.x or earlier
  shell: >
      kong prepare --prefix {{ kong_prefix_dir }} --conf {{ kong_conf_dir }}/kong.conf
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  args:
    creates: "{{ kong_prefix_dir }}"

- name: Initialise kong run status
  set_fact:
    run_status: up

- name: Check kong health status | v0.11.x or later
  shell: kong health || true
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  changed_when: false
  register: health

- name: Set kong run status | v0.11.x or later
  set_fact:
    run_status: down
  when: health.stderr.find('Kong is not running') != -1

- debug: var=health
- debug: var=run_status

- name: Update kong database schema | v0.11.x or earlier
  shell: >
      kong migrations up --conf {{ kong_conf_dir }}/kong.conf
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  when: run_status == "down"
  run_once: true
  register: migration

- name: Copy over kong init script
  template:
    src: kong.init.j2
    dest: "/etc/init.d/kong"
    owner: root
    group: root
    mode:  0744
  when: kong_manage_init_script

- name: Create sysvinit symlinks
  service:
    name: kong
    enabled: yes
  when: kong_manage_init_script

- name: Delete sysvinit symlinks
  service:
    name: kong
    enabled: no
  when: not kong_manage_init_script

- name: Delete kong init script
  file:
    path: "/etc/init.d/kong"
    state: absent
  when: not kong_manage_init_script

- name: Start kong natively | v0.11.x or earlier
  shell: >
      ulimit -n "{{ kong_max_files_limit }}" && \
        kong start --conf {{ kong_conf_dir }}/kong.conf --nginx-conf {{ kong_conf_dir }}/custom-nginx.template
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  when: run_status == "down" and not kong_manage_init_script
  register: start

- name: Start kong via init | v0.11.x or earlier
  service:
    name: kong
    state: started
  when: run_status == "down" and kong_manage_init_script
