---

# Debian
- name: Download kong deb package | Debian
  get_url: url="{{ kong_deb_pkg_url }}" dest=/var/tmp validate_certs=no
  when: ansible_os_family|lower == 'debian'

- name: Install kong prerequisites (Debian/Ubuntu only)
  apt: 
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ kong_prereqs }}"
  when: ansible_os_family|lower == 'debian'

- name: Install kong extra prerequisites (Debian/Ubuntu only) | v0.8.x or earlier
  apt: 
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: [ netcat, dnsmasq ]
  when: ansible_os_family|lower == 'debian' and kong_version|version_compare('0.9.0', '<')

- name: Install kong | Debian
  apt:
    deb:   "/var/tmp/kong-{{ kong_version }}.{{ ansible_distribution_release }}_all.deb"
    state: present
  when: ansible_os_family|lower == 'debian'

# RedHat
- name: Download kong rpm package | RedHat
  get_url: url="{{ kong_rpm_pkg_url }}" dest=/var/tmp validate_certs=no
  when: ansible_os_family|lower == 'redhat'

- name: Install kong | RedHat
  yum: 
    name: "/var/tmp/kong-{{ kong_version }}.el7.noarch.rpm"
    disable_gpg_check: yes
    state: present
  when: ansible_os_family|lower == 'redhat'

- name: Ensure kong nginx working dir has appropriate permissions
  file:
    path:  "{{ kong_nginx_working_dir }}"
    owner: root
    group: root
    mode:  0777     # vanilla install gives mode=0777 but could it be mode=0755?

- name: Create logrotate config for kong logs
  template:
    src:  logrotate.j2
    dest: /etc/logrotate.d/kong
    owner: root
    group: root
    mode: 0644

##-------------------
##  v0.8.x or earlier
##-------------------
- name: Create kong config file | v0.8.x or earlier
  template: src=kong.yml.j2 dest="{{ kong_conf_dir }}/kong.yml" owner=root group=root mode=0644
  when: kong_version|version_compare('0.9.0', '<')
  notify: Restart kong | v0.8.x or earlier

- name: Check kong running status | v0.8.x or earlier
  shell: kong status || true
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  register: status
  when: kong_version|version_compare('0.9.0', '<')

- name: Set kong run status | v0.8.x or earlier
  set_fact: 
    run_status: down
  when: kong_version|version_compare('0.9.0', '<') and status.stdout.find('Kong is not running') != -1

- debug: var=status.stdout_lines
  when: kong_version|version_compare('0.9.0', '<')

- name: Start kong | v0.8.x or earlier
  shell: ulimit -n "{{ kong_max_files_limit }}" && kong start
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  when: kong_version|version_compare('0.9.0', '<') and run_status|default("up") == "down"
  register: start

##-------------------
##  v0.9.x or later
##-------------------
- name: Create kong config file | v0.9.x or later
  template: 
    src:  kong.conf.j2
    dest: "{{ kong_conf_dir }}/kong.conf"
    owner: root
    group: root
    mode:  0644
  when: kong_version|version_compare('0.9.0', '>=')
  notify: 
    - Validate kong config
    - Restart kong | v0.9.x or later

- name: Create kong custom nginx config file | v0.9.x or later
  template: 
    src:  custom-nginx.template.j2
    dest: "{{ kong_conf_dir }}/custom-nginx.template"
    owner: root
    group: root
    mode:  0644
  when: kong_version|version_compare('0.9.0', '>=')
  notify: 
    - Validate kong config
    - Reload kong

- name: Check kong health status | v0.9.x or later
  shell: kong health || true
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  register: health
  when: kong_version|version_compare('0.9.0', '>=')

- name: Set kong run status | v0.9.x or later
  set_fact: 
    run_status: down
  when: kong_version|version_compare('0.9.0', '>=') and health.stderr.find('Kong is not running') != -1

- debug: var=health
  when: kong_version|version_compare('0.9.0', '>=')

- name: Start kong | v0.9.x or earlier
  shell: >
      ulimit -n "{{ kong_max_files_limit }}" && \
        kong start --conf {{ kong_conf_dir }}/kong.conf --nginx-conf {{ kong_conf_dir }}/custom-nginx.template
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  when: kong_version|version_compare('0.9.0', '>=') and run_status|default("up") == "down"
  register: start

- debug: var=start.stdout_lines

#- pause: minutes=60
