---
- name: Check os family
  fail: msg="Kong migration on {{ ansible_os_family }} not supported here"
  when: ansible_os_family|lower != 'debian'

- name: Copy kong_migration_check.sh
  copy:
    src:  roles/ansible-kong/test/kong_migration_check.sh
    dest: /var/tmp/kong_migration_check.sh
    mode: 0755

- name: Check kong version installed
  shell: kong version
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  ignore_errors: true
  register: v

- debug: msg="Installed kong version - {{ v.stdout }}"

- name: Run kong_migration_check.sh
  shell: /var/tmp/kong_migration_check.sh {{ kong_host }}
  when: v|success
  register: o

- debug: var=o

- name: Kong migrations
  block:
    - name: Stop kong (before migration)
      shell: kong stop
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
      ignore_errors: true

    - name: Download kong deb package | Debian
      get_url: url="{{ kong_deb_pkg_url }}" dest=/var/tmp validate_certs=no
      when: ansible_os_family|lower == 'debian'

    - name: Install kong prerequisites (Debian/Ubuntu only)
      apt: 
        name: "{{ item }}"
        update_cache: yes
        state: present
      with_items: "{{ kong_prereqs }}"
      when: ansible_os_family|lower == 'debian'

    - name: Uninstall kong {{ kong_version_current }} | Debian
      apt:
        name: kong={{ kong_version_current }}
        state: absent
      when: ansible_os_family|lower == 'debian'

    - name: Install kong | Debian
      apt:
        deb:   "/var/tmp/{{ kong_deb_pkg }}"
        state: present
      when: ansible_os_family|lower == 'debian'

    - name: Run kong migration
      shell: kong migrations up  --conf {{ kong_conf_dir }}/kong.conf
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
      register: migration

    - debug: var=migration
  when: v.stdout|match(kong_version_current) and kong_version|version_compare(kong_version_current, '>')

